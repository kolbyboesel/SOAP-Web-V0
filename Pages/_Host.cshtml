@page "/_Host"
@using Microsoft.AspNetCore.Components.Web
@namespace BlazorApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Host</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorApp.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="wwwroot/images/favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script>

        window.methods = {

            CreateCookie: function (name, value, days) {

                var expires;

                if (days) {

                    var date = new Date();

                    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));

                    expires = "; expires=" + date.toGMTString();

                }

                else {

                    expires = "";

                }

                document.cookie = name + "=" + value + expires + "; path=/";

            },

            GetCookie: function (cname) {

                let name = cname + "=";

                let decodedCookie = decodeURIComponent(document.cookie);

                let ca = decodedCookie.split(';');

                for (let i = 0; i < ca.length; i++) {

                    let c = ca[i];

                    while (c.charAt(0) == ' ') {

                        c = c.substring(1);

                    }

                    if (c.indexOf(name) == 0) {

                        return c.substring(name.length, c.length);

                    }

                }

                return "";

            }

        }

    </script>
    <script src="_framework/blazor.server.js"></script>
    <script src="https://www.paypal.com/sdk/js?client-id=sb"></script>
    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="/js/popper.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/popper.min.js.map"></script>
    <script src="/js/bootstrap.min.js.map"></script>
    <script src="/js/jquery.sticky.js"></script>
    <script src="/js/main.js"></script>
    <script src="/js/kolbysBets.js"></script>
    <script src="/js/mlbNews.js"></script>
    <script src="/js/betBoard.js"></script>
    <script src="/js/bestBets.js"></script>
    <script src="/js/nbaNews.js"></script>
    <script src="/js/scoreboard.js"></script>
    <script src="/js/sportsAI.js"></script>
    <script src="/js/cookieInterop.js"></script>

</body>
</html>
