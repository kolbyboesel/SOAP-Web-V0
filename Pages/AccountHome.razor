@page "/AccountHome"
@inject IHttpContextAccessor HttpContextAccessor
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>Account Hub</PageTitle>

<head>
  <link rel="stylesheet" href="/css/MainStyle.css" asp-append-version="true" />
  <link rel="stylesheet" href="/css/AccountHome.css" asp-append-version="true" />
  <link rel="stylesheet" href="/css/BettingOdds.css" asp-append-version="true" />
  <link rel="stylesheet" href="/css/AIBestBets.css" asp-append-version="true" />
  <link rel="stylesheet" href="/css/ScoreboardStyle.css" asp-append-version="true" />
  <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
  <link rel="stylesheet" href="https://www.w3schools.com/html/styles.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
</head>

<style>
    .headerImage {
      padding-top: 5vh;
      width: 100%!important;
      left: 1%;
      position: fixed;
      text-align: center;
      align-content: center;
      width: 50%;
      color: white;
      font-size: 2rem;
      display: block;
      top:0;
    }
    @@media screen and (min-width: 766px) {
    .mobilePadding {
      padding-top: 2.5vh;
      left: 0!important;
    }
    }
    @@media screen and (max-width: 766px) {
    .containerPad {
      padding-top: 110px!important;
    }
    }
    @@media screen and (min-width: 1184px) {
    .mobileSetting {
      display: none!important;
    }
  }
</style>
<div class="headerImage mobileSetting mobilePadding">Account Hub</div>
<div class="site-mobile-menu site-navbar-target" style="width: 100%;height:100%">
        <div class="site-mobile-menu-close js-menu-toggle mt-3 mobileNavClose">
          Close
        </div>
      <div class="site-mobile-menu-body" style="position: fixed; height:fit-content; bottom:0; text-align:center;width:100vw;overflow:auto">
        <ul class="site-nav-wrap">
          <li><a href="#" class="Home">Home</a></li>
          <li><a href="#" class="LiveScores">Live Scores</a></li>
          <li><a href="#" class="BettingOdds">Betting Odds</a></li>
          <li><a href="#" class="AccountHome">AI Best Bets</a></li>
              <li class="has-children">
                <span class="arrow-collapse collapsed" data-toggle="collapse" data-target="#collapseItem2" aria-expanded="false"></span>
                <a>Manage Account</a>
                <ul class="dropdown">
                  <li><a class="ChangeEmail" href="#">Update Email</a></li>
                  <li><a class="ChangePsw" href="#">Change Password</a></li>
                  </ul>
              </li>
              <li><a href="/Signout">Sign Out</a></li>
        </ul>
      </div>
    </div> <!-- .site-mobile-menu -->
    <!-- NAVBAR -->
    <header class="site-navbar mt-3" style="top:1rem!important">
      <div class="container-fluid">
        <div class="row align-items-center">
          <div class="site-logo col-6" style="width: 40%;"></div>

          <nav class="mx-auto site-navigation" style="width:auto!important; left:15%; ">
            <ul class="site-menu js-clone-nav d-none d-xl-block ml-0 pl-0">
              <li class="has-children" style="position:relative;top:2rem;left:50%">
                <a class="nav-link active">Account Hub</a>
                <ul class="dropdown">
                  <li><a href="/AccountHome">AI Best Bets</a></li>
                  <li><a href="/ChangeEmail">Update Email</a></li>
                  <li><a href="/ChangePsw">Change Password</a></li>
                  </ul>
              </li>
            </ul>
          </nav>
          
          <div class="center-cta-menu text-center d-flex aligin-items-center col-6">
            <a href="#" class="site-menu-toggle js-menu-toggle d-inline-block d-xl-none mt-lg-2 ml-3 mobileNavToggle" style="margin-top: 0!important;">Menu</a>
          </div>
        </div>
      </div>
    </header>
<!-- Add Alert -->

<div class="largeScreenContainer">
        <div class="pageHeader containerPad">AI Best Bets</div>
        <div style="color:black;width: 100%; height: 1%; padding-top: 10px; text-align: center; display: inline-block; font-size: 2vh;">The account hub contains all bets from the NBA, NHL, MLB, and NFL, and provides the most likely outcome for each game based on a variety of data, to provide +EV betting opportunities</div>
        <div style="color:black;width: 100%; height: 1%; padding-top: 10px; text-align: center; display: inline-block; font-size: 2vh;">Expected value (EV) in sports betting is a way to measure the probability gap between a bettor’s expectations and the sportsbook’s</div>

        <div class="AccountContainer">
        </div>
</div>
@code
{
  protected override async Task OnAfterRenderAsync(bool firstRender)
            {
              
              string isLoggedIn = HttpContextAccessor.HttpContext.Request.Cookies["loggedInStatus"];
              string confirmPayment = HttpContextAccessor.HttpContext.Request.Cookies["PaidConfirm"];
              string changedPassword = HttpContextAccessor.HttpContext.Request.Cookies["ChangedPassword"];
              string changedEmail = HttpContextAccessor.HttpContext.Request.Cookies["ChangedEmail"];
              string signedUp = HttpContextAccessor.HttpContext.Request.Cookies["signedUp"];
              string loggedIn = HttpContextAccessor.HttpContext.Request.Cookies["loggedIn"];
              if(isLoggedIn != "true"){
                NavigationManager.NavigateTo("/", forceLoad:true);
              }
              else if(confirmPayment == "No")
              {
                NavigationManager.NavigateTo("/Payment", forceLoad:true);
              }
              else 
              {
                if(loggedIn == "yes")
                {
                  await JSRuntime.InvokeVoidAsync("cookieInterop.deleteCookie", "loggedIn");
                  await JSRuntime.InvokeAsync<object>("Alert", "Successfully Logged In!");
                }
                if(signedUp == "yes")
                {
                  await JSRuntime.InvokeVoidAsync("cookieInterop.deleteCookie", "signedUp");
                  await JSRuntime.InvokeAsync<object>("Alert", "Payment Successful!");
                }
                if(changedPassword == "yes")
                {
                  await JSRuntime.InvokeVoidAsync("cookieInterop.deleteCookie", "ChangedPassword");
                  await JSRuntime.InvokeAsync<object>("Alert", "Password Change Successful!");
                }
                if(changedEmail == "yes")
                {
                  await JSRuntime.InvokeVoidAsync("cookieInterop.deleteCookie", "ChangedEmail");
                  await JSRuntime.InvokeAsync<object>("Alert", "Email Change Successful!");
                }
                await JSRuntime.InvokeVoidAsync("showMLBBets");
              }

            }
}